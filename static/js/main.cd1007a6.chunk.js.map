{"version":3,"sources":["logo.svg","../../../lib/esm/utils/loadDomScript.js","../../../lib/esm/hooks/useHtml5QrCodeScript.js","../../../lib/esm/hooks/useHtml5QrCode.js","../../../lib/esm/hooks/useAvailableDevices.js","../../../lib/esm/hooks/useHtml5QrCodeScanner.js","App.tsx","reportWebVitals.ts","index.tsx"],"names":["loadDomScript","scriptUrl","onLoaded","Array","from","document","getElementsByTagName","some","el","src","includes","scriptExists","script_1","createElement","type","crossOrigin","readyState","onreadystatechange","onload","appendChild","useHtml5QrCodeScript","_a","useState","loaded","setLoaded","useEffect","useHtml5QrCode","html5QrCodeScriptUrl","Html5Qrcode","useMemo","window","useAvailableDevices","undefined","devices","setDevices","_b","error","setError","getCameras","then","cameras","catch","getCamerasError","useHtml5QrCodeScanner","Html5QrcodeScanner","html5QrCodeScannerFile","process","App","fps","qrbox","width","height","render","data","console","log","err","className","logo","alt","id","map","v","label","href","target","rel","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cd1007a6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","/**\n * Returns whether the specified script url exists already in the HEAD of the\n * current document.\n *\n * @param {string} scriptUrl entire url to look for (src).\n * @returns {boolean}\n */\nfunction scriptExists(scriptUrl) {\n    return Array.from(document.getElementsByTagName('script')).some(function (el) { return (el.src.includes(scriptUrl)); });\n}\n/**\n * Loads the desired scriptUrl if it is not already present in the HEAD of the\n * current document.\n *\n * If it is already included, `onLoaded` is raised immediately.\n *\n * @param {string} scriptUrl entire url to look for (src).\n * @param {OnDomScriptLoaded} onLoaded callback to invoke once the script is\n * loaded.\n */\nfunction loadDomScript(scriptUrl, onLoaded) {\n    if (!scriptExists(scriptUrl)) {\n        var script_1 = document.createElement('script');\n        script_1.type = 'text/javascript';\n        script_1.crossOrigin = true;\n        if (script_1.readyState) {\n            script_1.onreadystatechange = function onreadystatechange() {\n                if (script_1.readyState === 'loaded' || script_1.readyState === 'complete') {\n                    script_1.onreadystatechange = null;\n                    onLoaded();\n                }\n            };\n        }\n        else {\n            script_1.onload = function () { return onLoaded(); };\n        }\n        script_1.src = scriptUrl;\n        document.getElementsByTagName('head')[0].appendChild(script_1);\n    }\n    else {\n        onLoaded();\n    }\n}\nexport default loadDomScript;\n","import { useEffect, useState } from 'react';\nimport loadDomScript from '../utils/loadDomScript';\nfunction useHtml5QrCodeScript(scriptUrl) {\n    var _a = useState(false), loaded = _a[0], setLoaded = _a[1];\n    // Include the script if it is not already included.\n    useEffect(function () {\n        loadDomScript(scriptUrl, function () {\n            setLoaded(true);\n        });\n    }, []);\n    return { loaded: loaded };\n}\nexport default useHtml5QrCodeScript;\n","import { useMemo } from 'react';\nimport useHtml5QrCodeScript from './useHtml5QrCodeScript';\n/**\n * Hook returning the Html5Qrcode instance.\n *\n * @param {string} html5QrCodeScriptUrl URL to the html5-qr-code compiled\n * library.\n * @returns\n */\nfunction useHtml5QrCode(html5QrCodeScriptUrl) {\n    var loaded = useHtml5QrCodeScript(html5QrCodeScriptUrl).loaded;\n    var Html5Qrcode = useMemo(function () { return window.Html5Qrcode; }, [\n        window.Html5Qrcode,\n    ]);\n    return { Html5Qrcode: Html5Qrcode, loaded: loaded };\n}\nexport default useHtml5QrCode;\n","import { useEffect, useState } from 'react';\nimport useHtml5QrCode from './useHtml5QrCode';\nfunction useAvailableDevices(scriptUrl) {\n    var Html5Qrcode = useHtml5QrCode(scriptUrl).Html5Qrcode;\n    var _a = useState(undefined), devices = _a[0], setDevices = _a[1];\n    var _b = useState(undefined), error = _b[0], setError = _b[1];\n    useEffect(function () {\n        if (Html5Qrcode) {\n            Html5Qrcode.getCameras().then(function (cameras) {\n                setDevices(cameras);\n            }).catch(function (getCamerasError) {\n                setError(getCamerasError);\n            });\n        }\n    }, [Html5Qrcode]);\n    return { devices: devices, error: error };\n}\nexport default useAvailableDevices;\n","import { useMemo } from 'react';\nimport useHtml5QrCodeScript from './useHtml5QrCodeScript';\n/**\n * Hook returning the Html5QrcodeScanner instance.\n *\n * @param {string} html5QrCodeScriptUrl URL to the html5-qr-code compiled\n * library.\n * @returns\n */\nfunction useHtml5QrCodeScanner(html5QrCodeScriptUrl) {\n    var loaded = useHtml5QrCodeScript(html5QrCodeScriptUrl).loaded;\n    var Html5QrcodeScanner = useMemo(function () { return window.Html5QrcodeScanner; }, [\n        window.Html5QrcodeScanner,\n    ]);\n    return { Html5QrcodeScanner: Html5QrcodeScanner, loaded: loaded };\n}\nexport default useHtml5QrCodeScanner;\n","import React, { useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { useHtml5QrCodeScanner, useAvailableDevices } from 'react-html5-qrcode-reader';\n\nconst html5QrCodeScannerFile = process.env.PUBLIC_URL + '/html5-qrcode.min.js'; // <-- this file is in /public.\n\nfunction App() {\n  const { Html5QrcodeScanner } = useHtml5QrCodeScanner(\n    html5QrCodeScannerFile\n  );\n  const { devices, error } = useAvailableDevices(\n    html5QrCodeScannerFile\n  );\n\n  useEffect(() => {\n    if (Html5QrcodeScanner) {\n      let html5QrcodeScanner = new Html5QrcodeScanner(\n        \"reader\",\n        { fps: 10, qrbox: {width: 250, height: 250} },\n        /* verbose= */ false);\n      html5QrcodeScanner.render(\n        (data: any) => console.log('success ->', data), \n        (err: any) => console.log('err ->', err)\n      );\n    }\n  }, [Html5QrcodeScanner]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <div id='reader'></div>\n        {error && `Devices error: ${error}`}\n        {devices && (\n          <div>\n            <span>Available devices are:</span>\n            <ul>\n              {devices.map(v => (\n                <li>\n                  id: {v.id}<br />\n                  label: {v.label}\n                </li>\n              ))}\n            </ul>\n          </div>\n        )}\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}