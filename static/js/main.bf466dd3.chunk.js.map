{"version":3,"sources":["logo.svg","../../../lib/esm/utils/loadDomScript.js","../../../lib/esm/hooks/useHtml5QrCodeScript.js","../../../lib/esm/hooks/useHtml5QrCodeScanner.js","App.tsx","reportWebVitals.ts","index.tsx"],"names":["loadDomScript","scriptUrl","onLoaded","Array","from","document","getElementsByTagName","some","el","src","includes","scriptExists","script_1","createElement","type","crossOrigin","readyState","onreadystatechange","onload","appendChild","useHtml5QrCodeScript","_a","useState","loaded","setLoaded","useEffect","useHtml5QrCodeScanner","html5QrCodeScriptUrl","html5QrcodeScriptLoaded","Html5QrcodeScanner","useMemo","window","App","fps","qrbox","width","height","render","data","console","log","err","className","logo","alt","id","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"kJAAe,G,KAAA,IAA0B,kC,KC2C1BA,MAvBf,SAAuBC,EAAWC,GAC9B,GAdJ,SAAsBD,GAClB,OAAOE,MAAMC,KAAKC,SAASC,qBAAqB,WAAWC,MAAK,SAAUC,GAAM,OAAQA,EAAGC,IAAIC,SAAST,MAanGU,CAAaV,GAmBdC,QAnB0B,CAC1B,IAAIU,EAAWP,SAASQ,cAAc,UACtCD,EAASE,KAAO,kBAChBF,EAASG,aAAc,EACnBH,EAASI,WACTJ,EAASK,mBAAqB,WACE,WAAxBL,EAASI,YAAmD,aAAxBJ,EAASI,aAC7CJ,EAASK,mBAAqB,KAC9Bf,MAKRU,EAASM,OAAS,WAAc,OAAOhB,KAE3CU,EAASH,IAAMR,EACfI,SAASC,qBAAqB,QAAQ,GAAGa,YAAYP,KCzB9CQ,MAVf,SAA8BnB,GAC1B,IAAIoB,EAAKC,oBAAS,GAAQC,EAASF,EAAG,GAAIG,EAAYH,EAAG,GAOzD,OALAI,qBAAU,WACNzB,EAAcC,GAAW,WACrBuB,GAAU,QAEf,IACI,CAAED,OAAQA,ICSNG,MAVf,SAA+BC,GAC3B,IAAIC,EAA0BR,EAAqBO,GAAsBJ,OAOzE,MAAO,CAAEM,mBANgBC,mBAAQ,WAC7B,GAAIF,EACA,OAAOG,OAAOF,qBAGnB,CAACD,M,OC4BOI,MAvCf,WACE,IAAQH,EAAuBH,EAC7B,uBADMG,mBAiBR,OAbAJ,qBAAU,WACJI,GACuB,IAAIA,EAC3B,SACA,CAAEI,IAAK,GAAIC,MAAO,CAACC,MAAO,IAAKC,OAAQ,OACxB,GACEC,QACjB,SAACC,GAAD,OAAeC,QAAQC,IAAI,aAAcF,MACzC,SAACG,GAAD,OAAcF,QAAQC,IAAI,SAAUC,QAGvC,CAACZ,IAGF,qBAAKa,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKjC,IAAKkC,EAAMD,UAAU,WAAWE,IAAI,SACzC,qBAAKC,GAAG,WACR,sCACO,+CADP,0BAGA,mBACEH,UAAU,WACVI,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,+BCjBOC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASrB,OACP,cAAC,IAAMsB,WAAP,UACE,cAAC,EAAD,MAEFtD,SAASuD,eAAe,SAM1BX,K","file":"static/js/main.bf466dd3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","/**\r\n * Returns whether the specified script url exists already in the HEAD of the\r\n * current document.\r\n *\r\n * @param {string} scriptUrl entire url to look for (src).\r\n * @returns {boolean}\r\n */\r\nfunction scriptExists(scriptUrl) {\r\n    return Array.from(document.getElementsByTagName('script')).some(function (el) { return (el.src.includes(scriptUrl)); });\r\n}\r\n/**\r\n * Loads the desired scriptUrl if it is not already present in the HEAD of the\r\n * current document.\r\n *\r\n * If it is already included, `onLoaded` is raised immediately.\r\n *\r\n * @param {string} scriptUrl entire url to look for (src).\r\n * @param {OnDomScriptLoaded} onLoaded callback to invoke once the script is\r\n * loaded.\r\n */\r\nfunction loadDomScript(scriptUrl, onLoaded) {\r\n    if (!scriptExists(scriptUrl)) {\r\n        var script_1 = document.createElement('script');\r\n        script_1.type = 'text/javascript';\r\n        script_1.crossOrigin = true;\r\n        if (script_1.readyState) {\r\n            script_1.onreadystatechange = function onreadystatechange() {\r\n                if (script_1.readyState === 'loaded' || script_1.readyState === 'complete') {\r\n                    script_1.onreadystatechange = null;\r\n                    onLoaded();\r\n                }\r\n            };\r\n        }\r\n        else {\r\n            script_1.onload = function () { return onLoaded(); };\r\n        }\r\n        script_1.src = scriptUrl;\r\n        document.getElementsByTagName('head')[0].appendChild(script_1);\r\n    }\r\n    else {\r\n        onLoaded();\r\n    }\r\n}\r\nexport default loadDomScript;\r\n","import { useEffect, useState } from 'react';\r\nimport loadDomScript from '../utils/loadDomScript';\r\nfunction useHtml5QrCodeScript(scriptUrl) {\r\n    var _a = useState(false), loaded = _a[0], setLoaded = _a[1];\r\n    // Include the script if it is not already included.\r\n    useEffect(function () {\r\n        loadDomScript(scriptUrl, function () {\r\n            setLoaded(true);\r\n        });\r\n    }, []);\r\n    return { loaded: loaded };\r\n}\r\nexport default useHtml5QrCodeScript;\r\n","import { useMemo } from 'react';\r\nimport useHtml5QrCodeScript from './useHtml5QrCodeScript';\r\n/**\r\n * Hook returning the Html5QrcodeScanner instance.\r\n *\r\n * @param {string} html5QrCodeScriptUrl URL to the html5-qr-code compiled\r\n * library.\r\n * @returns\r\n */\r\nfunction useHtml5QrCodeScanner(html5QrCodeScriptUrl) {\r\n    var html5QrcodeScriptLoaded = useHtml5QrCodeScript(html5QrCodeScriptUrl).loaded;\r\n    var Html5QrcodeScanner = useMemo(function () {\r\n        if (html5QrcodeScriptLoaded) {\r\n            return window.Html5QrcodeScanner;\r\n        }\r\n        return undefined;\r\n    }, [html5QrcodeScriptLoaded]);\r\n    return { Html5QrcodeScanner: Html5QrcodeScanner };\r\n}\r\nexport default useHtml5QrCodeScanner;\r\n","import React, { useEffect } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport { useHtml5QrCodeScanner } from 'react-html5-qrcode-reader';\r\n\r\nfunction App() {\r\n  const { Html5QrcodeScanner } = useHtml5QrCodeScanner(\r\n    'html5-qrcode.min.js' // <-- this file is in /public.\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (Html5QrcodeScanner) {\r\n      let html5QrcodeScanner = new Html5QrcodeScanner(\r\n        \"reader\",\r\n        { fps: 10, qrbox: {width: 250, height: 250} },\r\n        /* verbose= */ false);\r\n      html5QrcodeScanner.render(\r\n        (data: any) => console.log('success ->', data), \r\n        (err: any) => console.log('err ->', err)\r\n      );\r\n    }\r\n  }, [Html5QrcodeScanner]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <div id='reader'></div>\r\n        <p>\r\n          Edit <code>src/App.tsx</code> and save to reload.\r\n        </p>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://reactjs.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Learn React\r\n        </a>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}